/* You can add global styles to this file, and also import other style files */
@import '~ag-grid-community/dist/styles/ag-grid.css';
@import '~ag-grid-community/dist/styles/ag-theme-alpine';
@import '~ag-grid-community/dist/styles/ag-theme-balham';

@import './assets/scss/material-dashboard.scss';
@import 'assets/scss/DSG-theme.scss';
@import 'assets/scss/Monochromatic-theme.scss';
@import '~bootstrap/dist/css/bootstrap.css';

// 3) style specific component
// this would normaly be in a .scss file of your custom component
// therefore you'd just include those .scss files here
@mixin my-custom-component($theme) {
  // retrieve variables from current theme
  // only keep those you need and remove the others
  $primary: map-get($theme, primary);
  //$accent: map-get($theme, accent);
  //$warn: map-get($theme, accent);
  //$foreground: map-get($theme, foreground);
  //$background: map-get($theme, background);
}

// 4) Helper which prevents us from adding all of our custom
// components themes one by one to each theme
@mixin custom-components-theme($theme) {
  @include my-custom-component($theme);
  //.. include all custom components mixins here
}

// 5) define default theme

$DSG-green: (
  50: #e0edea,
  100: #b3d1cc,
  200: #80b2aa,
  300: #4d9387,
  400: #267c6e,
  500: #006554,
  600: #005d4d,
  700: #005343,
  800: #00493a,
  900: #003729,
  A100: #6effd0,
  A200: #3bffbf,
  A400: #08ffaf,
  A700: #00eea1,
  contrast: (
    50: $black-87-opacity,
    100: $black-87-opacity,
    200: $black-87-opacity,
    300: $black-87-opacity,
    400: $black-87-opacity,
    500: white,
    600: white,
    700: white,
    800: white,
    900: white,
    A100: $black-87-opacity,
    A200: $black-87-opacity,
    A400: $black-87-opacity,
    A700: white,
  ),
);

$DSG-orange: (
  50: #fdf1e5,
  100: #fadcbe,
  200: #f6c593,
  300: #f2ae67,
  400: #f09c47,
  500: #ed8b26,
  600: #eb8322,
  700: #e8781c,
  800: #e56e17,
  900: #e05b0d,
  A100: #ffffff,
  A200: #ffe5d9,
  A400: #ffc3a6,
  A700: #ffb28c,
  contrast: (
    50: $black-87-opacity,
    100: $black-87-opacity,
    200: $black-87-opacity,
    300: $black-87-opacity,
    400: $black-87-opacity,
    500: white,
    600: white,
    700: white,
    800: white,
    900: white,
    A100: $black-87-opacity,
    A200: $black-87-opacity,
    A400: $black-87-opacity,
    A700: white,
  ),
);
// mandatory stuff for theming
$DSG-primary: mat-palette($DSG-green);
$DSG-secondary: mat-palette($DSG-orange);

// include the custom theme components into a theme object
$DSG-theme: mat-light-theme($DSG-primary, $DSG-secondary);

// include the custom theme object into the angular material theme
@include angular-material-theme($DSG-theme);
@include custom-components-theme($DSG-theme);

.Monochromatic {
  $dark: (
    50: #e3e4e4,
    100: #babcbb,
    200: #8c8f8e,
    300: #5e6260,
    400: #3c413e,
    500: #191f1c,
    600: #161b19,
    700: #121714,
    800: #0e1211,
    900: #080a09,
    A100: #51ffff,
    A200: #1effff,
    A400: #00eaea,
    A700: #00d0d0,
    contrast: (
      50: #000000,
      100: #000000,
      200: #000000,
      300: #ffffff,
      400: #ffffff,
      500: #ffffff,
      600: #ffffff,
      700: #ffffff,
      800: #ffffff,
      900: #ffffff,
      A100: #000000,
      A200: #000000,
      A400: #000000,
      A700: #000000,
    ),
  );
  $light: (
    50: #fdfdfd,
    100: #fafafa,
    200: #f7f7f7,
    300: #f3f3f3,
    400: #f1f1f1,
    500: #eeeeee,
    600: #ececec,
    700: #e9e9e9,
    800: #e7e7e7,
    900: #e2e2e2,
    A100: #ffffff,
    A200: #ffffff,
    A400: #ffffff,
    A700: #ffffff,
    contrast: (
      50: #000000,
      100: #000000,
      200: #000000,
      300: #000000,
      400: #000000,
      500: #000000,
      600: #000000,
      700: #000000,
      800: #000000,
      900: #000000,
      A100: #000000,
      A200: #000000,
      A400: #000000,
      A700: #000000,
    ),
  );
  /* For use in src/lib/core/theming/_palette.scss */
  $white: (
    50: #ffffff,
    100: #ffffff,
    200: #ffffff,
    300: #ffffff,
    400: #ffffff,
    500: #ffffff,
    600: #ffffff,
    700: #ffffff,
    800: #ffffff,
    900: #ffffff,
    A100: #ffffff,
    A200: #ffffff,
    A400: #ffffff,
    A700: #ffffff,
    contrast: (
      50: #000000,
      100: #000000,
      200: #000000,
      300: #000000,
      400: #000000,
      500: #000000,
      600: #000000,
      700: #000000,
      800: #000000,
      900: #000000,
      A100: #000000,
      A200: #000000,
      A400: #000000,
      A700: #000000,
    ),
  );

  $background-dark: mat-palette($dark);
  $background-light: mat-palette($light);
  $background-white: mat-palette($white);
  $Monochromatic-theme: mat-light-theme($background-dark, $background-light, $background-white);
  @include angular-material-theme($Monochromatic-theme);
  @include custom-components-theme($Monochromatic-theme);
}

@font-face {
  font-family: 'DSG Sans Black';
  src: url('/assets/fonts/DSGSansBlack.otf');
}

.dicks-font {
  font-family: 'DSG Sans Black';
  font-size: 40px;
}

.feedback-button {
  display: none;
}

@media all and (min-width: 1024px) {
  .feedback-button {
    display: block;
  }
}

#AM-font {
  font-size: 40px;
  font-family: 'DSG Sans Black';
  color: white;
  text-decoration: bold;
}

.dropdown-div {
  display: inline-block;
  margin: 2px;
  padding: 2px;
}

.dropdown-font {
  font-size: 1em;
  font-family: 'Roboto', serif;
  color: #191f1c;
  text-decoration: bold;
  font-weight: bold;
}

.services-list {
  list-style-type: none;
  padding: 0;
  font-size: 14x;
  text-align: center;
  width: 100%;
}

.active {
  background-color: #00580e !important;
  color: #ffffff;
}

.header {
  background-color: #191f1c;
  height: 10%;
  position: relative;
}

.menu-picture {
  text-align: left;
  position: relative;
  width: 60px;
  height: 40px;
}

.AM-head {
  text-align: left;
  position: relative;
  background-color: black;
}

.dropdown-container {
  text-align: center;
  position: relative;
  height: 50px;
}

.image-div {
  display: inline-block;
  text-align: center;
  position: relative;
}

.example-icon {
  padding: 0 14px;
}

.example-spacer {
  flex: 1 1 auto;
}

html,
body,
.page {
  height: 100%; /* needed for proper layout */
}

body {
  overflow: hidden;
}

p {
  margin-bottom: 1em;
}

.page {
  display: flex;
  flex-direction: column;
}

.page-header {
  flex: 0 0 auto;
  background-color: #dcdcdc;
}

.page-content {
  flex: 1 1 auto;
  position: relative; /* need this to position inner content */
  overflow-y: auto;
}

.page-footer {
  flex: 0 0 auto;
  background-color: #dcdcdc;
  line-height: 50px;
  padding: 0 20px;
}

button.new-door-group {
  position: fixed;
  bottom: 100px;
  right: 50px;
}

button.edit-door-group {
  position: fixed;
  bottom: 100px;
  right: 50px;
}
button.delete-door-group {
  position: fixed;
  bottom: 170px;
  right: 50px;
}

.footer {
  line-height: 50px;
  padding: 0 20px;
}

section {
  display: table;
  margin: 8px;
}

.example-label {
  display: flex;
  font-size: 14px;
  margin-left: 450px;
  width: 480px;
  justify-content: right;
  color: black;
}

.example-button-row {
  display: table-cell;
}

.example-button-row button {
  display: table-cell;
  margin-right: 8px;
}

.example-flex-container {
  display: flex;
  justify-content: space-between;
  width: 480px;
}

.example-button-container {
  display: flex;
  justify-content: left;
  width: 120px;
}

.tool-tip-style {
  flex: 0 0 auto;
  background-color: #dcdcdc;
  font-size: small;
}
